API WordPress
WordPress содержит множество различных API (интерфейсов прикладных программ), которые помогают взаимодействовать с WordPress. Представьте себе, что 
API — ворота, которые позволяют вам добавить код или вернуть внешний контент 
в рамках WordPress без нарушения максимы «не взламывай ядро». Большинство 
API добавляют отсылки в не относящийся к ядру код, который потом будет добавлен в директорию wp-content путем регистрации точек входа WordPress. Каждый 
API задокументирован в Кодексе наряду с функциями, используемыми в API. API 
представляет собой набор предопределенных функций, доступных для использования в темах и плагинах. Ниже приведен список наиболее распространенных API 
WordPress:
О Plugin API. Используется для разработки индивидуальных плагинов. В Кодексе 
есть обширная страница с документацией по Plugin API. Она включает в себя 
обзор зацепок (перехватывающих функций), действий и фильтров, которые 
являются основными способами взаимодействия с WordPress с позиции индивидуального плагина. Страница Plugin API ссылается на страницы Справочника 
по функциям в отношении доступных функций API, которые расположены 
в /wp-includes/plugins.php.
http://codex.wordpress.org/Plugin_API
О Widgets API. Используется для создания и поддержания виджета в вашем 
плагине. Виджет автоматически появится во вкладке Внешний вид ► Виджеты 
и может быть размещен на любой заданной панели в теме.
http://codex.wordpress.org/Widgets_API
104 Глава 4. Обзор ядра
О Shortcode API. Используется для добавления в плагин сокращенных кодов. 
Сокращенный код — это макрокод, добавленный в запись, который позволяет 
плагину захватить сокращенный код, выполнить определенные команды и отобразить элементы на их месте в записи. Сокращенные коды также могут принимать параметры для изменения данных на выходе.
Примером сокращенного кода ядра WordPress является [gallery]. Добавление 
[gallery] в запись приводит к автоматическому отображению всех изображений, 
загруженных для этой записи, в виде галереи. При редактировании записи вы 
будете видеть сокращенный код [gallery], при просмотре страницы на сайте 
будет отображаться актуальная галерея изображений.
http://codex.wordpress.org/Shortcode_API
О HTTP API. Используется для отправки запроса HTTP из WordPress. Этот API 
является стандартизированным методом захвата контента с внешнего URL. 
Обычно он берет предоставленный URL и проверяет несколько методов РНР 
для отправки запроса. В зависимости от среды хостинга WordPress использует 
первый метод, который полагает правильно настроенным для отправки запроса 
HTTP.
Проверенными на данный момент методами HTTP API РНР являются URL, 
Streams и FSockopen. Методы проверяются именно в этом порядке. Вы можете 
использовать плагин Core Control (Контроль ядра) (http://wordpress.org/extend/ 
plugins/Core-control/), чтобы специально выбрать, какой метод использовать для 
отправки запросов HTTP.
Используя HTTP API, вы можете легко взаимодействовать с Google Maps API, 
чтобы динамически генерировать карты и планы. HTTP API также может легко 
взаимодействовать с Twitter API, позволяя вам добавлять/читать твиты прямо 
из WordPress.
http ://codex.wordpress.org/HTTP_API
О Settings API. Используется для создания страниц настроек. Этот API используется для создания и управления индивидуальными параметрами ваших плагинов и тем. Основное преимущество использования Settings API — это безопасность. Этот API вычищает все данные настроек, сохраненные пользователем. 
Это значит, что можно больше не беспокоиться о значении времени, контроле 
данных и атак через межсайтовый скриптинг (XSS) при сохранении данных по 
настройкам. Это гораздо проще, чем старый способ контроля данных, который 
приходилось использовать каждый раз при сохранении настроек плагина.
http://codex.wordpress.org/Settings_API
О Options API. Используется для хранения данных по параметрам в базе данных 
WordPress. Параметры API обеспечивают легкий способ создания, обновления, 
возврата и удаления значений параметров.
http://codex.wordpress.org/Options_API
Не взламывайте ядро! 105
О Dashboard Widgets API. Используется для создания виджетов администраторской консоли. Виджеты, добавляемые из API автоматически, содержат все 
возможности j Query, которые имеют виджеты администраторской консоли, 
включая параметры перетаскивания, уменьшения и исчезновения с экрана.
http://codex.wordpress.org/Dashboard_Widgets_API
О Rewrite API. Используется для создания индивидуальных правил преобразования. Этот API позволяет создавать индивидуальные правила преобразования, 
как бы вы делали это в файле .htaccess. Вы также можете создавать индивидуальные метки структуры постоянных ссылок (то есть %postname%), добавлять 
статические конечные точки (то есть /ту-page/) и даже дополнительные ссылки 
для фидов. Функции Rewrite находятся по ссылке /wp-includes/rewrite.php
в http://codex.wordpress.org/Rewrite_API.
He забывайте, что все API W ordPress могут использоваться при разработке 
индивидуальных плагинов и тем. Это основной метод расширения WordPress 
с помощью дополнительных возможностей и функциональности. Использование 
названных выше API дает простой и стандартизированный путь взаимодействия 
с WordPress.
Для получения дополнительной информации по всем API WordPress обратитесь 
к странице Кодекса http://codex.wordpress.org/WordPress_APrs.
Битва за Кодекс
Как и в случае любой вики, споры о точности статей в Кодексе будут вестись всегда. Одна из бед, поразивших Кодекс, — это актуальность статей. WordPress идет 
вперед бодрой рысью, которой должен бежать и Кодекс, чтобы оставаться точным. 
К сожалению, он поспевает не всегда, поэтому некоторые материалы оказываются 
устаревшими. Кодекс WordPress — коллективный проект, поэтому вы можете без 
проблем создать в нем учетную запись и оказывать посильную помощь.
Другой сложностью Кодекса является организация содержимого. На данный 
момент море информации раскинулось настолько широко, что выловить из него 
ответы на нужные вопросы может быть ой как непросто. Так что, как уже говорилось, введение в ядро WordPress снабдило вас картой, позволяющей сузить область 
поиска, и познакомило вас с темами, касающимися функций